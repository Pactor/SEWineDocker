#!/bin/bash
set -euo pipefail

echo "=== üê≥ Docker Installation & User Setup ==="

# 1Ô∏è‚É£ Install Docker if missing
if ! command -v docker &>/dev/null; then
  echo "üì¶ Installing Docker Engine..."
  sudo apt-get update -y
  sudo apt-get install -y ca-certificates curl gnupg lsb-release

  # Add Docker‚Äôs official GPG key
  sudo install -m 0755 -d /etc/apt/keyrings
  if [ ! -f /etc/apt/keyrings/docker.gpg ]; then
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  fi

  # Add Docker repository
  echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
    https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" |
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

  sudo apt-get update -y
  sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

  echo "‚úÖ Docker installed successfully."
else
  echo "‚úÖ Docker already installed."
fi

# 2Ô∏è‚É£ Create docker group if missing
if ! getent group docker >/dev/null; then
  echo "üîß Creating 'docker' group..."
  sudo groupadd docker
else
  echo "‚úÖ 'docker' group already exists."
fi

# 3Ô∏è‚É£ Add current user to docker group
USER_NAME=$(whoami)
if groups "$USER_NAME" | grep -q '\bdocker\b'; then
  echo "‚úÖ User '$USER_NAME' is already in the docker group."
else
  echo "‚ûï Adding '$USER_NAME' to docker group..."
  sudo usermod -aG docker "$USER_NAME"
  echo "‚ö†Ô∏è  You must log out and back in for this to take effect."
fi

# 4Ô∏è‚É£ Fix permissions on socket for immediate use
if [ -S /var/run/docker.sock ]; then
  echo "üîß Updating socket permissions..."
  sudo chmod 666 /var/run/docker.sock
fi

# 5Ô∏è‚É£ Verify access
echo
echo "üöÄ Testing Docker access without sudo..."
if docker ps >/dev/null 2>&1; then
  echo "‚úÖ Docker works without sudo!"
else
  echo "‚ö†Ô∏è  You may need to log out or reboot before it works."
fi

echo
echo "‚úÖ System ready for Docker image builds!"
